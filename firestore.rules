service cloud.firestore {

  // returns true if the userId is an admin
  function isAdmin(userId) {
    return get(/databases/$(database)/documents/users/$(userId)).data.admin == true;
  }

  // returns true if the current request is coming from an Admin user
  function isAdminRequest() {
    return isAdmin(request.auth.uid);
  }

  match /databases/{database}/documents {

    // Match user data
    match /users/{userId} {
      allow read, write;
      // allow read: if request.auth.uid == userId;
      // allow write: if request.auth.uid == userId;
    }
    
    // Match design templates
    match /templates/{template} {
      allow read;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }

    // Match orders
    match /orders/{orderId} {
      allow read, write: if request.auth.uid == resource.data.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }

    // Match lists
    match /lists {
      allow read, write;//: if request.auth.uid == resource.data.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }
    match /lists/{listId} {
      allow read, write;//: if request.auth.uid == resource.data.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }
    match /lists/{listId}/addresses {
      allow read, write;
    }
    match /lists/{listId}/addresses/{addressId} {
      allow read, write;
    }
  }
}
